Q>Given an array of strings arr[] of size N, find if there exists 2 strings arr[i] and arr[j] 
such that arr[i]+arr[j] is a palindrome i.e the concatenation of string arr[i] and arr[j] 
results into a palindrome

sol>class Solution {
  palindromepair(N, arr) {
    let hm = new Map()
    for(let i=0;i<arr.length;i++){
        hm.set(arr[i],i)
    }
    for(let i=0;i<arr.length;i++){
        let n = arr[i].length
        for(let j=0;j<=n;j++){
            let prefix = arr[i].substring(0,j)
            let suffix = arr[i].substring(j)
            let reversedPrefix = prefix.split('').reverse().join('')
            if(hm.has(reversedPrefix) && hm.get(reversedPrefix) !=i && this.isPalindrome(suffix))
                return true
            let reversedSuffix = suffix.split('').reverse().join('')
            if(hm.has(reversedSuffix) && hm.get(reversedSuffix) !=i && this.isPalindrome(prefix) && suffix.length>0)
                return true
        }
    }
    return false
  }
    isPalindrome(word){
        for(let i=0,j=word.length-1;i<j;i++,j--){
            if(word[i] !=word[j])
                return false
        }
        return true
    }
}



