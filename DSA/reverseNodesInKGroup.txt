Given the head of a linked list, reverse the nodes of the list k at a time, and return the modified list.
k is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of k then left-out nodes, in the end, should remain as it is
leetcode 25
var reverseKGroup = function(head, k) {
    let current = head
    for(let i=0;i<k;i++){
        if(current==null)
            return head
        current = current.next
    }
    let prev = null
    let temp = null
    current = head
    for(let i=0;i<k;i++){
        temp = current.next
        current.next = prev
        prev = current
        current = temp
    }
    head.next = reverseKGroup(current,k)
    return prev
};